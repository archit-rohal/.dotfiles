#!/bin/sh

# Example for $XDG_CONFIG_HOME/nsxiv/exec/key-handler
# Called by nsxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon: all marked images, if in thumbnail mode and at least one
# image has been marked, otherwise the current image. nsxiv(1) will block until
# the handler terminates. It then checks which images have been modified and
# reloads them.

# By default nsxiv(1) will send one image per-line to stdin, however when using
# -0 the image list will be NULL separated and the environment variable
# "$NSXIV_USING_NULL" will be set to 1.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.
# If KEY has an uppercase equivalent, S-KEY is resolved into it. For instance,
# K replaces S-k and Scedilla replaces S-scedilla, but S-Delete is sent as-is.

rotate() {
	degree="$1"
	tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read file; do
		case "$(file -b -i "$file")" in
		image/jpeg*) jpegtran -rotate "$degree" -copy all -outfile "$file" "$file" ;;
		*) mogrify -rotate "$degree" "$file" ;;
		esac
	done
}

case "$1" in

"w")
	# Set the current image as the wallpaper and update the wallpaper command in .xinitrc
	while read file; do
		file=$(realpath "$file")
		feh --bg-scale "$file"
		sed -i "/feh --bg-scale/c\feh --bg-scale \"$file\" \&" ~/.xinitrc
		notify-send -t 1500 'Wallpaper set and .xinitrc updated'
	done
	;;

"p")
	# Copy the path of the current image to the clipboard
	while read file; do
		realpath "$file" | tr '\n' ' ' | xclip -in -selection clipboard
		notify-send -t 1500 'Path Copied'
	done
	;;
"c")
	# Copy the current image to the clipboard
	while read file; do
		xclip -selection clipboard -target image/png "$file"
		notify-send -t 1500 'Image Copied'
	done
	;;
"e")
	# Open the metadata of the current image in nvim
	while read file; do
		st -e sh -c "exiv2 pr -q -pa \"$file\" | nvim -" 2>/dev/null &
		notify-send -t 1500 'Metadata Opened'
	done
	;;
"g")
	# Open the current image in GIMP
	while read -r file; do
		gimp "$file" &
		notify-send -t 1500 'Image Opened in GIMP'
	done
	;;
"comma")
	# Rotate the current image 270 degrees
	rotate 270
	notify-send -t 1500 'Image Rotated 270 Degrees'
	;;
"period")
	# Rotate the current image 90 degrees
	rotate 90
	notify-send -t 1500 'Image Rotated 90 Degrees'
	;;
"slash")
	# Rotate the current image 180 degrees
	rotate 180
	notify-send -t 1500 'Image Rotated 180 Degrees'
	;;
"b")
	# Apply a blur effect to the current image
	while read file; do
		convert "$file" -blur 0x16 "${file%.*}_blur.${file##*.}"
	done
	;;
"d")
	# Delete the current image
	while read file; do
		rm "$file"
		notify-send -t 1500 'File Deleted'
	done
	;;
"r")
	# Rename the current image
	while read file; do
		mv "$file" "$(dirname "$file")/$(zenity --entry --text="Enter new name" --entry-text="$(basename "$file")")"
	done
	;;
"q")
	# Open the current image in qimgv
	while read file; do
		qimgv "$file" &
		notify-send -t 1500 'Image Opened in qimgv'
	done
	;;
"t")
	# Extract text from the current image using OCR
	while read file; do
		tesseract "$file" stdout | xclip -selection clipboard
		notify-send -t 1500 'Text Copied to Clipboard'
	done
	;;

esac
